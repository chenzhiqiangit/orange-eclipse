<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
	
	<!-- 配置JMS连接工厂 -->
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://10.1.23.58:61616" />
		<!-- 是否异步发送,异步是用监听器，监听 -->
    	<property name="useAsyncSend" value="true" />
    	<property name="redeliveryPolicy">
	        <bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
	            <!--是否在每次尝试重新发送失败后,增长这个等待时间-->
	            <property name="useExponentialBackOff" value="true"></property>
	            <!--重发次数,默认为6次-->
	            <property name="maximumRedeliveries" value="3"></property>
	            <!--重发时间间隔,默认为1秒-->
	            <property name="initialRedeliveryDelay" value="1000"></property>
	            <!--第一次失败后重新发送之前等待500毫秒,第二次失败再等待500 * 2毫秒,这里的2就是value-->
	            <property name="backOffMultiplier" value="2"></property>
	            <!--最大传送延迟，只在useExponentialBackOff为true时有效（V5.5），假设首次重连间隔为10ms，倍数为2，那么第 二次重连时间间隔为 20ms，第三次重连时间间隔为40ms，当重连时间间隔大的最大重连时间间隔时，以后每次重连时间间隔都为最大重连时间间隔。-->
	            <property name="maximumRedeliveryDelay" value="1000"></property>
	        </bean>
	    </property>
	</bean>
	
	<!-- Queue队列：仅有一个订阅者会收到消息，消息一旦被处理就不会存在队列中 -->
	<bean id="notifyQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>q.notify</value>
		</constructor-arg>
	</bean>
	
	 <!--这个是主题目的地，一对多的-->  
	<bean id="notifyTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg>
			<value>t.notify</value>
		</constructor-arg>
	</bean>
	
	<!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
	 	<property name="pubSubDomain" value="false" />
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="notifyQueue" />
		
		<!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false-->
		<property name="explicitQosEnabled" value="true" />   
		<!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->  
        <property name="deliveryMode" value="2" /> 
        <!-- 消息应答方式   
                   如果session带有事务，并且事务成功提交，则消息被自动签收。如果事务回滚，则消息会被再次传送。
                   不带事务的session的签收方式，取决于session的配置。        
        Session.AUTO_ACKNOWLEDGE  消息自动签收   
        Session.CLIENT_ACKNOWLEDGE  客户端调用acknowledge方法手动签收   
        Session.DUPS_OK_ACKNOWLEDGE 不必必须签收，消息可能会重复发送   
        --> 
        <property name="sessionAcknowledgeMode" value="1" />  
        
	</bean>
	
	<!-- 配置JMS模板（Topic），Spring提供的JMS工具类，它发送、接收消息。 -->
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
	 	<property name="pubSubDomain" value="true" />
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="notifyTopic"/>
		<!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false-->
		<property name="explicitQosEnabled" value="true" />   
		<!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->  
        <property name="deliveryMode" value="2" /> 
        <!-- 消息应答方式   
                   如果session带有事务，并且事务成功提交，则消息被自动签收。如果事务回滚，则消息会被再次传送。
                   不带事务的session的签收方式，取决于session的配置。        
        Session.AUTO_ACKNOWLEDGE  消息自动签收   
        Session.CLIENT_ACKNOWLEDGE  客户端调用acknowledge方法手动签收   
        Session.DUPS_OK_ACKNOWLEDGE 不必必须签收，消息可能会重复发送   
        --> 
        <property name="sessionAcknowledgeMode" value="1" />    
	</bean>
	
	<bean id="sendLocationSynchronizeService" class="com.orange.weixin.mq.LocationSynchronizeService">
		<property name="jmsTemplate" ref="jmsQueueTemplate"></property>
	</bean>
	<bean id="receiveLocationSynchronizeService" class="com.orange.weixin.mq.LocationSynchronizeReceiveService"></bean>
	<bean id="fileClearService" class="com.orange.weixin.mq.FileClearService"></bean>
	
	<!-- 监听消息 -->
    <bean id="jmsTopicMessageListener" class="com.orange.weixin.mq.TopicMessageListener">
    	<property name="schedulerMap">
			<map>
				<entry key="1" value-ref="fileClearService"></entry>
				<entry key="2" value-ref="receiveLocationSynchronizeService"></entry>
			</map>
		</property>
    </bean>
	
	<bean id = "listenerConsumer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="connectionFactory"/>  
        <property name="destination" ref="notifyTopic" />  
        <property name="messageListener" ref="jmsTopicMessageListener" />  
    </bean>  
    
</beans>  